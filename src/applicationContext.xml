<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置spring注解扫描路径 -->
	<context:component-scan
		base-package="edu20191116.day1" />
	<!-- 加载本地src下配置文件 -->
	<context:property-placeholder
		location="classpath:conf.properties" />

	<!--1 配置C3P0数据源 -->
	<bean id="datasource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!--驱动类名 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- url -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 用户名 -->
		<property name="user" value="${jdbc.uid}" />
		<!-- 密码 -->
		<property name="password" value="${jdbc.pwd}" />
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
		<property name="acquireIncrement" value="5"></property>
		<!-- 初始连接池大小 -->
		<property name="initialPoolSize" value="10"></property>
		<!-- 连接池中连接最小个数 -->
		<property name="minPoolSize" value="5"></property>
		<!-- 连接池中连接最大个数 -->
		<property name="maxPoolSize" value="20"></property>
	</bean>

	<!--2 会话工厂bean sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="datasource"></property>
		<!-- SQL映射文件路径 -->
		<property name="mapperLocations"
			value="classpath:edu20191116/day1/dao/mapper/*.xml"></property>
	</bean>

	<!--3 自动扫描对象关系映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="edu20191116.day1.dao.mapper" />
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>

	<!--4 声明式事务管理 -->
	<!--定义事物管理器，由spring管理事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>
	</bean>

	<!-- Shiro-1 将自定义Realm加入IOC容器 -->
	<bean id="myRealm" class="edu20191116.day1.shiroweb.realm.MyRealm">
		<!-- 配置MD5加密，若不进行MD5加密，这段代码不用 -->
		<!-- <property name="credentialsMatcher"> <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"> 
			MD5加密 <property name="hashAlgorithmName" value="MD5" /> 加密次数 <property name="hashIterations" 
			value="1024" /> </bean> </property> -->
	</bean>

	<!-- Shiro-2 配置安全管理器 -->
	<bean id="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
	</bean>

	<!-- Shiro-3 配置Shiro过滤器，id名必须和web.xml中的过滤器名一致 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 身份认证失败，则跳转到登录页面的配置 -->
		<property name="loginUrl" value="/login" />
		<!-- 权限认证失败，则跳转到指定页面 -->
		<property name="unauthorizedUrl" value="/login" />
		<!-- Shiro连接约束配置,即过滤链的定义, perms，roles，ssl，rest，port是属于AuthorizationFilter，而anon，authcBasic，auchc，user是AuthenticationFilter -->
		<property name="filterChainDefinitions">
			<value>
				/login=anon
				/admin/**=authc,roles[admin]
				/dept/**=perms[dept.select]
			</value>
		</property>
	</bean>

	<!-- Shiro-4 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>